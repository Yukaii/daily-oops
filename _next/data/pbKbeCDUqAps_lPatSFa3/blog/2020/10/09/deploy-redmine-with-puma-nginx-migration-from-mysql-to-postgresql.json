{"pageProps":{"content":"\n# 使用 puma 和 nginx 部屬 Redmine（加上從 MySQL 搬到 PostgreSQL）\n\n前陣子看了幾篇 Linode 安利文，每月五鎂的機器好像就 Linode CP 值最高惹，管理界面雖然看起來陽春，使用起來倒挺有效率的。這幾天就把擺在 Vultr 上的自用服務 (Redmine，幾個 crontab 腳本) 搬到了 Linode 上。\n\n除了單純的搬家外，部屬的 Redmine 也做了一些調整：\n\n- 3.2 到 3.3\n- 資料庫由 MySQL 轉換到 PostgreSQL\n- Application server 由 passenger 換成 puma\n- 版控由官方 svn 換成 git mirror，方便操作 XD\n\n總之本篇除了是我的搬家筆記，還可以視為**自架 Redmine 指南**（大概啦）。\n\n## 設定新伺服器\n\n直接在 Linode 東京開了台 Ubuntu 的 Instance，然後 ssh 打密碼連進去。\n\n### 解決 apt-get update 卡住問題\n\n請參考 [apt-get update stuck: Connecting to security.ubuntu.com](https://askubuntu.com/a/787491)\n\n### 裝 Dependency\n\n首先當然就把系統的相依套件裝一裝，包含 tmux、postgres 資料庫等等。滿建議學習一下 tmux 的。可以開兩個 tab，一個 root 權限，一個一般權限，方便許多，不用一直切 su。\n\n```bash\napt-get update && apt-get upgrade && apt-get install -y git build-essential tmux postgresql libpq-dev # database\napt-get install -y libssl-dev libreadline-dev zlib1g-dev # ruby dependency\napt-get install -y imagemagick libmagickcore-dev libmagickwand-dev # redmine dependency\n```\n\n### 建立 deploy 用的使用者\n\n我不希望直接用 root 帳號跑起 Redmine 服務。總之就是安全性疑慮啦 XD。直接打 `adduser` 走完過程：\n\n```bash\nadduser deploy\n```\n\n### 安裝 Redmine\n\n#### 下載原始碼\n\n切到 `deploy` 帳號，把 redmine clone 下來，並把設定檔弄好：\n\n```bash\nsu deploy\ncd ~ # 切到家目錄\ngit clone https://github.com/redmine/redmine\n\ncd redmine\ngit checkout -b 3.3-stable origin/3.3-stable\n\ncp config/database.yml.example config/database.yml\ncp config/configuration.yml.example config/configuration.yml\n```\n\n#### 建立 Ruby 環境\n\n使用 [rbenv](https://github.com/rbenv/rbenv) 裝 ruby，直接照著步驟跑：\n\n```bash\ngit clone https://github.com/rbenv/rbenv.git ~/.rbenv\ncd ~/.rbenv && src/configure && make -C src\necho 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bash_profile # linode 上是 .bashrc\n~/.rbenv/bin/rbenv init # 貼上輸出到 .bash_profile 或 .bashrc\ngit clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build # 裝 ruby build\n```\n\n裝 ruby：\n\n```bash\nrbenv install 2.3.4\nrbenv global 2.3.4\necho 'gem: --no-ri --no-rdoc' >> ~/.gemrc\ngem install bundler\n```\n\n#### 設定資料庫\n\n用好棒棒的 [`pgcli`](https://github.com/dbcli/pgcli) 與本機 postgres 建立連線。上面 APT 套件裝完後應該就會自己跑起來了。\n\n```bash\napt-get install pgcli\nsudo -i -u postgres\npgcli\n```\n\n進去以後，建立使用者和資料庫：\n\n```sql\nCREATE USER redmine WITH PASSWORD 'PASSWORD';\nCREATE DATABASE redmine;\nGRANT ALL PRIVILEGES ON DATABASE redmine to redmine;\n```\n\n##### 測試連線(Optional)\n\n以防密碼打錯這種奇妙事件發生，我們可以測試一下連線。打開 `/etc/postgresql/9.5/main/pg_hba.conf`，找到下面加入這行：\n\n```txt\nlocal   all             redmine                                 md5\n```\n\n這行開啟本地端的帳密授權登入。然後用 `psql` 連線本機測試：\n\n```bash\npsql -U redmine -d redmine -W\n```\n\n成功連進去就 Ok 啦。\n\n#### 設定 Redmine 資料庫\n\n1. 編輯 `config/database.yml` 填入資料庫帳密，把 `mysql` 相關的都註解掉(development 等等)\n1. 然後安裝 redmine 的 gem dependency\n\n```bash\nbundle install --without development test\n```\n\n##### Migrate from old redmine (Optinoal)\n\n複製以下檔案：\n\n- `config/initializers/secret_token.rb`\n- `config/database.yml`\n- `config/configuration.yml`\n\n從 MySQL 搬家到 Postgres 的部分，因為都是同一個 App，Redmine 版本也只是小升沒有大型 migration，我直接利用[`yaml_db`](https://github.com/yamldb/yaml_db) 套件，把資料庫 dump 出來成 yaml，然後在 load 就行了 😍 可以參考 [`yaml_db`](https://github.com/yamldb/yaml_db) 套件 GitHub 說明。\n\n先跑 `RAILS_ENV=production bundle exec rake db:setup` 建立資料庫，然後在 `bundle exec rake db:data:load` 把檔案載入進來。\n\n## 設定 Puma\n\n在 Gemfile 加上 `gem 'puma'` 一行，然後跑 `bundle install --without development test` 安裝。再來編輯 `config/puma.rb` 貼上以下內容：\n\n```ruby\n#!/usr/bin/env puma\n\napplication_path = '/home/deploy/redmine'\ndirectory application_path\nenvironment 'production'\n# daemonize true\npidfile \"#{application_path}/tmp/pids/redmine.pid\"\nstate_path \"#{application_path}/tmp/pids/redmine.state\"\nstdout_redirect \"#{application_path}/log/redmine.stdout.log\", \"#{application_path}/log/redmine.stderr.log\"\nbind \"unix://#{application_path}/tmp/sockets/redmine.sock\"\n```\n\n記得建立 `pids` 和 `sockets` 資料夾：\n\n```bash\ncd ~/redmine\nmkdir tmp/sockets tmp/pids\n```\n\n可以用以下指令試跑 Server：\n\n```bash\nRAILS_ENV=production bundle exec puma -C config/puma.rb\n```\n\n## 設定 systemctl 自啟動\n\n用 root 權限編輯 `/etc/systemd/system/redmine.service`：\n\n```Ini\n[Unit]\nDescription=Rails-Puma Webserver\n\n[Service]\nType=simple\nUser=deploy\nWorkingDirectory=/home/deploy/redmine\nExecStart=/bin/bash -lc 'bundle exec puma -C config/puma.rb'\nTimeoutSec=15\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n```\n\n跑起來：\n\n```bash\nsystemctl daemon-reload # 重新載入設定檔\nsystemctl enable redmine.service # 設為開機啟動\nsystemctl start redmine.service # 啟動\nsystemctl status redmine.service # 看狀態\n```\n\n## 把 nginx 跟 puma socket server 接起來\n\n編輯 `/etc/nginx/sites-available/redmine`：\n\n```nginx\nupstream app {\n        server unix:/home/deploy/redmine/tmp/sockets/redmine.sock fail_timeout=0;\n}\n\nserver {\n        listen 80 default_server;\n        listen [::]:80 default_server;\n\n        server_name localhost;\n        root /home/deploy/redmine/public;\n        try_files $uri/index.html $uri @app;\n\n        location @app {\n                proxy_pass http://app;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_set_header Host $http_host;\n                proxy_redirect off;\n        }\n\n        error_page 500 502 503 504 /500.html;\n        client_max_body_size 4G;\n        keepalive_timeout 10;\n}\n```\n\n記得 soft link 回 `/etc/nginx/sites-enabled/`底下：\n\n```bash\ncd /etc/nginx/sites-enabled\nln -s ../sites-available/redmine .\n```\n\n重啟 `nginx`：\n\n```bash\nservice nginx restart\nservice nginx status\n```\n\n打開瀏覽器連 IP 應該就能看到辣！\n\n## 目前的 Plugin 列表\n\n- [redmine_emojibutton](www.redmine.org/plugins/redmine_emojibutton): Emoji 萬歲！\n- [redmine\\_markdown\\_task\\_list](https://github.com/eichisanden/redmine_markdown_task_list): Checklist\n- [redmine_mentions](http://www.redmine.org/plugins/redmine-mentions): Tag 人寄 email\n\n## References\n\n* https://gist.github.com/velenux/6883dc221a7d2eae7dcb\n* https://gist.github.com/jbradach/6ee5842e5e2543d59adb for config/puma.rb\n* https://www.digitalocean.com/community/tutorials/how-to-deploy-a-rails-app-with-puma-and-nginx-on-ubuntu-14-04\n* https://github.com/puma/puma/blob/master/docs/systemd.md\n* https://github.com/puma/puma/blob/master/docs/nginx.md\n* https://github.com/yamldb/yaml_db\n","title":"使用 puma 和 nginx 部屬 Redmine（加上從 MySQL 搬到 PostgreSQL）"},"__N_SSG":true}