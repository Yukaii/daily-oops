{"pageProps":{"content":"\nFeatures\n===\n**[English version](/features)**\n**[中文版](/features-tw)**\n**[日本語版](/features-jp)**\n\n**[:arrow_right: Check the source of this note :arrow_left:](/features?both)**\n\n**[Read the complete tutorial](https://hackmd.io/c/tutorials)**\n\nIntroduction\n===\n<i class=\"fa fa-file-text\"></i> **HackMD** is a realtime, multi-platform collaborative markdown knowledge base.\nYou can write notes with other people on your **desktop**, **tablet** or even on the **phone**.\n\nPlease report new issues in [GitHub](https://github.com/hackmdio/hackmd-io-issues/issues/new).\nIf you need instant help, please send us a [Facebook message](https://www.messenger.com/t/hackmdio).\n**Thank you very much!**\n\nWorkspace\n===\n## Modes\n**Desktop & Tablet**\n\n<i class=\"fa fa-pencil fa-fw\"></i> Edit: See only the editor.\n<i class=\"fa fa-eye fa-fw\"></i> View: See only the result.\n<i class=\"fa fa-columns fa-fw\"></i> Both: See both in split view.\n\n**Mobile**\n\n<i class=\"fa fa-eye fa-fw\"></i> View: See only the result.\n<i class=\"fa fa-pencil fa-fw\"></i> Edit: See only the editor.\n\n## Image Upload:\nYou can upload an image simply by clicking on the camera button <i class=\"fa fa-camera\"></i>.\nAlternatively, you can **drag-n-drop** an image into the editor. Even **pasting** images is possible!\nThis will automatically upload the image to **[imgur](http://imgur.com)**, nothing to worry. :tada:\n![](https://i.imgur.com/9cgQVqD.png)\n\n:::info\n:bulb: **Hint**: In the private team plan, the image will be uploaded to a private S3 storage and only accessible through the note.\n:::\n\n## Share Notes:\nPress the share button <i class=\"fa fa-share-alt\"></i> on the top right of the menu and click **Copy** button to copy the note URL link to your clipboard.\n\nTo publish and customize the note URL with permalink, please read **[How to Publish a Note with Permalink](https://hackmd.io/c/tutorials/%2Fs%2Fhow-to-publish-note)**.\n\n## Save a Note:\nCurrently, you can save to **Dropbox** <i class=\"fa fa-dropbox\"></i>, **Google Drive**, **Gist <i class=\"fa fa-github\"></i>** or save an `.md` file <i class=\"fa fa-file-text\"></i> and `.html` locally.\n\n## Import Notes:\nSimilarly to the _save_ feature, you can also import an `.md` or `.html` file from **Dropbox** <i class=\"fa fa-dropbox\"></i>, **Google Drive**, **Gist <i class=\"fa fa-github\"></i>** or import content from your **clipboard** <i class=\"fa fa-clipboard\"></i>, and that can parse some **HTML** which might be useful :smiley:\n\n## Permissions:\nIt is possible to change permissions to a note through the button on the share button <i class=\"fa fa-share-alt\"></i> on the top right of the menu, click the button and you will see the **Sharing** menu.\n\nFor **read** and **write** permissions, you can either choose: **Owners**, **Signed-in users** or **Everyone**.\n\nFor **commenting** permission, please click **More** in the sharing menu and choose either: **Forbidden**, **Owners**, **Signed-in users** or **Everyone**. You even can disable the commenting feature through the toggle <i class=\"fa fa-toggle-on\"></i> to the right of the commenting label.\n\n**Only the owners of the note can change above permissions.**\n\nTo invite specific user to a note, please read **[Invite Others to a Private Note](https://hackmd.io/c/tutorials/%2Fs%2Finvite)**.\n\n## Embed a Note:\nNotes can be embedded using iframe as follows:\n\n```xml\n<iframe width=\"100%\" height=\"500\" src=\"https://hackmd.io/features\" frameborder=\"0\"></iframe>\n```\n\nOr you can use embed syntax to include a note seamlessly, please read **[Embedding another note](https://hackmd.io/c/tutorials/%2Fs%2Fhow-to-embed-note)**.\n\n## [Slide Mode](/slide-example):\nYou can use a special syntax to organize your note into slides.\nAfter that, you can use the **Slide Mode** <i class=\"fa fa-tv\"></i> to make a presentation.\nVisit the above link for details.\n\n## [Book Mode](/book-example):\nYou can make your notes into a book.\nList your links in order or nest them.\nThen use the **Book Mode** <i class=\"fa fa-book\"></i> to make a collection.\nVisit the above link for details.\n\nView\n===\n## Table of Contents:\nYou can look at the bottom right section of the view area, there is a _ToC_ button <i class=\"fa fa-bars\"></i>.\nPressing that button will show you a current _Table of Contents_, and will highlight which section you're at.\nIf the view area is wide enough, to ToC will show directly at the right section of the view area.\n\nToCs support up to **three header levels**.\n\n## Header link\nEvery header will automatically add a url link on the left side.\nYou can hover and click <i class=\"octicon octicon-link\"></i> to anchor on it.\n\nEdit:\n===\n## Shortcut Keys:\nJust like Sublime text, which is pretty quick and convenient.\n> For more infomation, see [here](https://codemirror.net/demo/sublime.html).\n\n## Auto-Complete:\nThis editor provides full auto-complete hints in markdown.\n- Emojis: type `:` to show hints.\n- Code blocks: type ` ``` ` and plus a character to show hint. <i style=\"display: none;\">```</i>\n- Headers: type `#` to show hint.\n- Referrals: type `[]` to show hint.\n- Externals: type `{}` to show hint.\n- Images: type `!` to show hint.\n\n## Title:\nThis will take the first **level 1 header** as the note title.\n\n## Tags:\nUsing tags as follows, the specified tags will show in your note list.\n###### tags: `features` `cool` `updated`\n\n## [YAML Metadata](/yaml-metadata)\nYou can provide advanced note information to set the browser behavior (visit above link for details):\n- title: set note title\n- description: set note description\n- image: set note default image (for link preview)\n- tags: set note tags\n- robots: set web robots meta\n- lang: set browser language\n- dir: set text direction\n- breaks: set to use line breaks\n- GA: set to use Google Analytics\n- disqus: set to use Disqus\n- slideOptions: setup slide mode options\n\n## ToC:\nUse the syntax `[TOC]` to embed table of content into your note.\n\n[TOC]\n\n## Emoji\nYou can type any emoji like this :smile: :smiley: :cry: :wink:\n> See full emoji list [here](https://github.com/ikatyang/emoji-cheat-sheet).\n\n## ToDo List:\n- [ ] ToDos\n  - [x] Buy some salad\n  - [ ] Brush teeth\n  - [x] Drink some water\n\n## Code Block:\nWe support many programming languages, use the auto complete function to see the entire list.\n```javascript=\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\nfunction $initHighlight(block, cls) {\n  try {\n    if (cls.search(/\\bno\\-highlight\\b/) != -1)\n      return process(block, true, 0x0F) +\n             ' class=\"\"';\n  } catch (e) {\n    /* handle exception */\n  }\n  for (var i = 0 / 2; i < classes.length; i++) {\n    if (checkCondition(classes[i]) === undefined)\n      return /\\d+[\\s/]/g;\n  }\n}\n```\n> If you want **line numbers**, type `=` after specifying the code block languages.\n> Also, you can specify the start line number.\n> Like below, the line number starts from 101:\n```javascript=101\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\nfunction $initHighlight(block, cls) {\n  try {\n    if (cls.search(/\\bno\\-highlight\\b/) != -1)\n      return process(block, true, 0x0F) +\n             ' class=\"\"';\n  } catch (e) {\n    /* handle exception */\n  }\n  for (var i = 0 / 2; i < classes.length; i++) {\n    if (checkCondition(classes[i]) === undefined)\n      return /\\d+[\\s/]/g;\n  }\n}\n```\n\n> Or you might want to continue the previous code block's line number, use `=+`\n\n```javascript=+\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n```\n\n> Sometimes you have a super long text without breaks. It's time to use `!` to wrap your code.\n\n```!\nWhen you’re a carpenter making a beautiful chest of drawers, you’re not going to use a piece of plywood on the back.\n```\n\n### Blockquote Tags:\n> Using the syntax below to specifiy your **name, time and color** to vary the blockquotes.\n> [name=ChengHan Wu] [time=Sun, Jun 28, 2015 9:59 PM] [color=#907bf7]\n> > Even support the nest blockquotes!\n> > [name=ChengHan Wu] [time=Sun, Jun 28, 2015 10:00 PM] [color=red]\n\n### Render CSV as table\n\nYou can use write csv in the codeblock:\n\n~~~md\n```csvpreview {header=\"true\"}\nfirstName,lastName,email,phoneNumber\nJohn,Doe,john@doe.com,0123456789\nJane,Doe,jane@doe.com,9876543210\nJames,Bond,james.bond@mi6.co.uk,0612345678\n```\n~~~\n\nwhich rendered to:\n\n```csvpreview {header=\"true\"}\nfirstName,lastName,email,phoneNumber\nJohn,Doe,john@doe.com,0123456789\nJane,Doe,jane@doe.com,9876543210\nJames,Bond,james.bond@mi6.co.uk,0612345678\n```\n\nWe use [Papa Parse](https://www.papaparse.com/) for parsing csv. The parsing option is given in braces: `{}`, and multiple options are seperated by a space. e.g. `{header=\"true\" delimiter=\".\"}`. Please read [their documentation](https://www.papaparse.com/docs#config) as reference.\n\n## Externals\n\n### YouTube\n{%youtube 1G4isv_Fylg %}\n\n### Vimeo\n{%vimeo 124148255 %}\n\n### Gist\n{%gist schacon/4277 %}\n\n### SlideShare\n{%slideshare briansolis/26-disruptive-technology-trends-2016-2018-56796196 %}\n\n### Speakerdeck\n{%speakerdeck sugarenia/xxlcss-how-to-scale-css-and-keep-your-sanity %}\n\n### PDF\n**Caution: this might be blocked by your browser if not using an `https` URL.**\n{%pdf https://www.w3.org/TR/WAI-WEBCONTENT/wai-pageauth.pdf %}\n\n## MathJax\n\nYou can render *LaTeX* mathematical expressions using **MathJax**, as on [math.stackexchange.com](http://math.stackexchange.com/), except the space after the start `$` and the space before the end `$` are not allowed in the inline math:\n\nThe *Gamma function* satisfying $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$ is via the Euler integral\n\nFor block level math, please give `$$` and a line break before and after your math formula:\n\n$$\nx = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.\n$$\n\n$$\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n$$\n\n> More information about **LaTeX** mathematical expressions [here](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference).\n\n## UML Diagrams\n\n### Sequence Diagrams\n\nYou can render sequence diagrams like this:\n\n```sequence\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\nNote left of Alice: Alice responds\nAlice->Bob: Where have you been?\n```\n\n### Flow Charts\n\nFlow charts can be specified like this:\n```flow\nst=>start: Start\ne=>end: End\nop=>operation: My Operation\nop2=>operation: lalala\ncond=>condition: Yes or No?\n\nst->op->op2->cond\ncond(yes)->e\ncond(no)->op2\n```\n\n### Graphviz\n```graphviz\ndigraph hierarchy {\n\n                nodesep=1.0 // increases the separation between nodes\n\n                node [color=Red,fontname=Courier,shape=box] //All nodes will this shape and colour\n                edge [color=Blue, style=dashed] //All the lines look like this\n\n                Headteacher->{Deputy1 Deputy2 BusinessManager}\n                Deputy1->{Teacher1 Teacher2}\n                BusinessManager->ITManager\n                {rank=same;ITManager Teacher1 Teacher2}  // Put them on the same level\n}\n```\n\n### Mermaid\n```mermaid\ngantt\n    title A Gantt Diagram\n\n    section Section\n    A task           :a1, 2014-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2014-01-12  , 12d\n    anther task      : 24d\n```\n\n### Abc\n```abc\nX:1\nT:Speed the Plough\nM:4/4\nC:Trad.\nK:G\n|:GABc dedB|dedB dedB|c2ec B2dB|c2A2 A2BA|\nGABc dedB|dedB dedB|c2ec B2dB|A2F2 G4:|\n|:g2gf gdBd|g2f2 e2d2|c2ec B2dB|c2A2 A2df|\ng2gf g2Bd|g2f2 e2d2|c2ec B2dB|A2F2 G4:|\n```\n\n### PlantUML\n\n```plantuml\nstart\nif (condition A) then (yes)\n  :Text 1;\nelseif (condition B) then (yes)\n  :Text 2;\n  stop\nelseif (condition C) then (yes)\n  :Text 3;\nelseif (condition D) then (yes)\n  :Text 4;\nelse (nothing)\n  :Text else;\nendif\nstop\n```\n\n### Vega-Lite\n```vega\n{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v4.json\",\n  \"data\": {\"url\": \"https://vega.github.io/editor/data/barley.json\"},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"aggregate\": \"sum\", \"field\": \"yield\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"variety\", \"type\": \"nominal\"},\n    \"color\": {\"field\": \"site\", \"type\": \"nominal\"}\n  }\n}\n```\n\n### Fretboard\n\n```fretboard {title=\"horizontal, 6 frets, with nut\", type=\"h6\"}\n-oO-*-\n--o-o-\n-o-oo-\n-o-oO-\n-oo-o-\n-*O-o-\n  3\n```\n\n> More information about **sequence diagrams** syntax [here](http://bramp.github.io/js-sequence-diagrams/).\n> More information about **flow charts** syntax [here](http://adrai.github.io/flowchart.js/).\n> More information about **graphviz** syntax [here](http://www.tonyballantyne.com/graphs.html)\n> More information about **mermaid** syntax [here](http://mermaid-js.github.io/mermaid)\n> More information about **abc** syntax [here](http://abcnotation.com/learn)\n> More information about **vega** syntax [here](https://vega.github.io/vega-lite/docs)\n> More information about **fretboard** syntax [here](https://hackmd.io/@docs/fretboard-syntax)\n\nAlert Area\n---\n:::success\nYes :tada:\n:::\n\n:::info\nThis is a message :mega:\n:::\n\n:::warning\nWatch out :zap:\n:::\n\n:::danger\nOh No! :fire:\n:::\n\n:::spoiler Click to show details\nYou found me :stuck_out_tongue_winking_eye:\n:::\n\n:::spoiler {state=\"open\"} Expand the spoiler container by default\nYou found me :stuck_out_tongue_winking_eye:\n:::\n\n## Typography\n\n### Headers\n\n```\n# h1 Heading\n## h2 Heading\n### h3 Heading\n#### h4 Heading\n##### h5 Heading\n###### h6 Heading\n```\n\n### Horizontal Rules\n\n___\n\n---\n\n***\n\n\n### Typographic Replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,\n\nRemarkable -- awesome\n\n\"Smartypants, double quotes\"\n\n'Smartypants, single quotes'\n\n### Emphasis\n\n**This is bold text**\n\n__This is bold text__\n\n*This is italic text*\n\n_This is italic text_\n\n~~Deleted text~~\n\nlu~lala~\n\nSuperscript: 19^th^\n\nSubscript: H~2~O\n\n++Inserted text++\n\n==Marked text==\n\n{ruby base|rubytext}\n\n### Blockquotes\n\n\n> Blockquotes can also be nested...\n>> ...by using additional greater-than signs right next to each other...\n> > > ...or with spaces between arrows.\n\n\n### Lists\n\n#### Unordered\n\n+ Create a list by starting a line with `+`, `-`, or `*`\n+ Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    * Ac tristique libero volutpat at\n    + Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n+ Very easy!\n\n#### Ordered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n1. You can use sequential numbers...\n\n---\n\n1. ...or keep all the numbers as `1.`\n1. feafw\n2. 332\n3. 242\n4. 2552\n1. e2\n\nStart numbering with offset:\n\n57. foo\n1. bar\n\n### Code\n\nInline `code`\n\nIndented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\n\nBlock code \"fences\"\n\n```\nSample text here...\n```\n\nSyntax highlighting\n\n```javascript\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n```\n\n### Tables\n\n| Option | Description |\n| ------ | ----------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\nRight aligned columns\n\n| Option | Description |\n| ------:| -----------:|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\nLeft aligned columns\n\n| Option | Description |\n|:------ |:----------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\nCenter aligned columns\n\n| Option | Description |\n|:------:|:-----------:|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n\n### Links\n[link text](http://dev.nodeca.com)\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\nAutoconverted link https://github.com/nodeca/pica\n\n\n### Images\n![Minion](https://octodex.github.com/images/minion.png)\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")\nLike links, Images also have a footnote style syntax\n![Alt text][id]\nWith a reference later in the document defining the URL location:\n\n[id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"\n\n![Minion](https://octodex.github.com/images/minion.png =200x200)\nShow the image with given size\n\n### Footnotes\n\nFootnote 1 link[^first].\nFootnote 2 link[^second].\nInline footnote^[Text of inline footnote] definition.\nDuplicated footnote reference[^second].\n\n[^first]: Footnote **can have markup**\n    and multiple paragraphs.\n[^second]: Footnote text.\n\n### Definition Lists\n\nTerm 1\n\n:   Definition 1\nwith lazy continuation.\n\nTerm 2 with *inline markup*\n\n:   Definition 2\n\n        { some code, part of Definition 2 }\n\n    Third paragraph of definition 2.\n\n_Compact style:_\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  ~ Definition 2a\n  ~ Definition 2b\n\n### Abbreviations\n\nThis is an HTML abbreviation example.\nIt converts \"HTML\", but keeps intact partial entries like \"xxxHTMLyyy\" and so on.\n\n*[HTML]: Hyper Text Markup Language\n","title":"Features","params":{"year":"2000","month":"01","day":"01","slug":"Features"},"disqus":{"shortname":"dailyoops","domain":"yukaii.tw"}},"__N_SSG":true}